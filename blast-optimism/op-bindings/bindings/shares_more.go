// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const SharesStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"_initialized\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint8\"},{\"astId\":1001,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"_initializing\",\"offset\":1,\"slot\":\"0\",\"type\":\"t_bool\"},{\"astId\":1002,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"price\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint256\"},{\"astId\":1003,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"pending\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_uint256\"},{\"astId\":1004,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_array(t_uint256)48_storage\"},{\"astId\":1005,\"contract\":\"src/L2/Shares.sol:Shares\",\"label\":\"_count\",\"offset\":0,\"slot\":\"51\",\"type\":\"t_uint256\"}],\"types\":{\"t_array(t_uint256)48_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[48]\",\"numberOfBytes\":\"1536\",\"base\":\"t_uint256\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint8\":{\"encoding\":\"inplace\",\"label\":\"uint8\",\"numberOfBytes\":\"1\"}}}"

var SharesStorageLayout = new(solc.StorageLayout)

var SharesDeployedBin = "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ae556b51161005b5780637ae556b5146100c3578063a035b1fe14610102578063e20ccec31461010b578063fe4b84df1461011457600080fd5b806306661abd1461008257806354fd4d50146100995780635b9af12b146100ae575b600080fd5b6033545b6040519081526020015b60405180910390f35b6100a1610127565b60405161009091906106a6565b6100c16100bc3660046106d9565b6101ca565b005b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610090565b61008660015481565b61008660025481565b6100c16101223660046106d9565b6101d6565b60606101527f0000000000000000000000000000000000000000000000000000000000000000610354565b61017b7f0000000000000000000000000000000000000000000000000000000000000000610354565b6101a47f0000000000000000000000000000000000000000000000000000000000000000610354565b6040516020016101b6939291906106f2565b604051602081830303815290604052905090565b6101d38161045d565b50565b600054610100900460ff16158080156101f65750600054600160ff909116105b806102105750303b158015610210575060005460ff166001145b6102785760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561029b576000805461ff0019166101001790555b6102a4826104c1565b60405163099005e760e31b81526002604360981b0190634c802f38906102d890309060019060009061dead90600401610762565b600060405180830381600087803b1580156102f257600080fd5b505af1158015610306573d6000803e3d6000fd5b505050508015610350576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60608160000361037b5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156103a5578061038f816107c8565b915061039e9050600a836107f7565b915061037f565b60008167ffffffffffffffff8111156103c0576103c061080b565b6040519080825280601f01601f1916602001820160405280156103ea576020820181803683370190505b5090505b8415610455576103ff600183610821565b915061040c600a86610838565b61041790603061084c565b60f81b81838151811061042c5761042c610864565b60200101906001600160f81b031916908160001a90535061044e600a866107f7565b94506103ee565b949350505050565b61046681610552565b604051635b9af12b60e01b8152600481018290526004604360981b0190635b9af12b90602401600060405180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b5050505050565b600054610100900460ff1661052c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161026f565b6001541561054d5760405163131cb46d60e21b815260040160405180910390fd5b600155565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167311110000000000000000000000000000000011101933016001600160a01b0316146105bb57604051631d73770560e11b815260040160405180910390fd5b80156105d95780600260008282546105d3919061084c565b90915550505b61035060006105e760335490565b60025410806105f65750603354155b156106015750600090565b60335460025461061191906107f7565b60016000828254610622919061084c565b90915550506033546002546106379190610838565b6002556001546040519081527f270b316b51ab2cf3a3bb8ca4d22e76a327d05e762fcaa8bd6afaf8cfde9270b79060200160405180910390a150600190565b60005b83811015610691578181015183820152602001610679565b838111156106a0576000848401525b50505050565b60208152600082518060208401526106c5816040850160208701610676565b601f01601f19169190910160400192915050565b6000602082840312156106eb57600080fd5b5035919050565b60008451610704818460208901610676565b8083019050601760f91b8082528551610724816001850160208a01610676565b6001920191820152835161073f816002840160208801610676565b0160020195945050505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682526080820190600386106107845761078461074c565b8560208401526002851061079a5761079a61074c565b84604084015280841660608401525095945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016107da576107da6107b2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610806576108066107e1565b500490565b634e487b7160e01b600052604160045260246000fd5b600082821015610833576108336107b2565b500390565b600082610847576108476107e1565b500690565b6000821982111561085f5761085f6107b2565b500190565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(SharesStorageLayoutJSON), SharesStorageLayout); err != nil {
		panic(err)
	}

	layouts["Shares"] = SharesStorageLayout
	deployedBytecodes["Shares"] = SharesDeployedBin
}
